@keyframes flash {
    0% {
        color: red;
    }

    50% {
        color: white;
    }

    100% {
        color: red;
    }
}

html,
body {
    margin: 0;
    padding: 0;
    width: 100%;
    overflow-x: hidden;
    font-family: monospace;
}

main {
    white-space: pre;
    margin: auto;
    word-wrap: break-word;
    text-wrap: wrap;
    max-width: 800px;
}

/* #wrap:checked~* pre {
    word-wrap: break-word;
    text-wrap: wrap;
} */

header,
footer {
    padding: 1em;
    text-align: center;
}

pre {
    background-color: #1f1f1f;
    color: white;
    padding: 10px;
    border-radius: 5px;
    display: inline-block;
    margin: 10px 0;
    max-width: 100%;
    box-sizing: border-box;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    scrollbar-width: thin;
    overflow-x: auto;
}

pre.lined {
    counter-reset: line;
}

div.line {
    --gutter: 3px;
    counter-increment: line;
    margin-left: 20px;
    padding-left: var(--gutter);
    position: relative;
}

body.word-wrap div.line {
    overflow-wrap: anywhere;
    white-space: break-spaces;
}

div.line::before {
    content: counter(line);
    display: block;
    color: #999;
    position: absolute;
    left: 0;
    transform: translateX(-100%);
    border-right: 1px solid gray;
    padding-right: var(--gutter);
    height: 100%;
}

h2,
h3,
h4 {
    display: inline-block;
    margin: 0;
}

table,
tr,
th,
td {
    border: 1px solid black;
    border-collapse: collapse;
}

td,
th {
    padding: 5px;
}

main>details>div {
    border: 1px solid black;
    padding: 20px;
}

header ul,
footer ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: row;
    justify-content: center;
}

header li,
footer li {
    margin: 0;
    padding: 0;
}

header li:not(:last-of-type),
footer li:not(:last-of-type) {
    margin-right: 10px;
    padding-right: 10px;
    border-right: 1px solid black;
}

.line-numbers {
    position: relative;
    padding-left: 3.8em;
    counter-reset: linenumber;
}

.line-numbers>code {
    position: relative;
    white-space: inherit;
}

.line-numbers .line-numbers-rows {
    position: absolute;
    pointer-events: none;
    top: 0;
    font-size: 100%;
    left: -3.8em;
    width: 3em;
    /* works for line-numbers below 1000 lines */
    letter-spacing: -1px;
    border-right: 1px solid #999;

    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

}

.line-numbers-rows>span {
    display: block;
    counter-increment: linenumber;
}

.line-numbers-rows>span:before {
    content: counter(linenumber);
    color: #999;
    display: block;
    padding-right: 0.8em;
    text-align: right;
}


.string\.regexp\.ts {
    color: #e06c75;

    &.punctuation\.definition\.character-class\.regexp,
    &.punctuation\.definition\.group\.assertion\.regexp,
    &.punctuation\.definition\.group\.regexp {
        color: #ce9178;
    }

    &.keyword\.operator\.quantifier\.regexp {
        color: #d7ba7d;
    }
}

.string\.quoted\.double\.ts,
.string\.template\.ts {
    color: #ce9178;
}

.storage\.type\.ts,
.constant\.language\.null\.ts,
.storage\.type\.class\.ts,
.constant\.language\.boolean\.true\.ts,
.constant\.language\.boolean\.false\.ts,
.variable\.language\.this\.ts,
.keyword\.other\.ts {
    color: #569cd6;
}

.variable\.other\.constant\.ts {
    color: #4fc1ff;
}

.variable\.other\.readwrite\.ts,
.variable\.other\.property\.ts,
.variable\.object\.property\.ts,
.support\.class\.console\.ts,
.punctuation\.separator\.key-value\.ts,
.meta\.object-literal\.key\.ts,
.variable\.parameter\.ts {
    color: #9cdcfe;
}

.punctuation\.definition\.block\.ts,
.keyword\.operator\.assignment\.ts,
.punctuation\.terminator\.statement\.ts,
.punctuation\.definition\.parameters\.begin\.ts,
.punctuation\.accessor\.ts,
.punctuation\.separator\.parameter\.ts,
.punctuation\.separator\.comma\.ts,
.meta\.brace\.round\.ts,
.punctuation\.definition\.parameters\.end\.ts {
    color: #d4d4d4;
}

.entity\.name\.type\.class\.ts {
    color: #4ec9b0;
}

.constant\.numeric\.decimal\.ts {
    color: #b5cea8;
}

.support\.function\.console\.ts,
.entity\.name\.function\.ts {
    color: #dcdcaa;
}

.keyword\.control\.conditional\.ts {
    color: #c586c0;
}